# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-29 01:28+0200\n"
"PO-Revision-Date: 2022-08-29 00:30+0000\n"
"Language-Team: German (https://www.transifex.com/otf/teams/56717/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../../_doc/developer/services/qfilecopy.rst:3
#: a2a863d43e714e5ab8959cfda4d3fc53
msgid "Inter-qube file copying (qfilecopy)"
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:5
#: 3b37fc63bc304b6895194cb464e7d0c1
msgid ""
"There are two cases when we need a mechanism to copy files between VMs:"
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:7
#: fd3ad6ca347e413aa625a1363c5708c8
msgid ""
"“regular” file copy - when user instructs file manager to copy a given "
"files/directories to a different VM"
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:9
#: 8e1f583bebb0449b8c0279c13eacb756
msgid ""
"DispVM copy - user selects “open in DispVM” on a file; this file must be "
"copied to a DisposableVM, edited by user, and possibly a modified file "
"copied back from DispVM to VM."
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:13
#: 666435076a2d4360b065ab29a70cf609
msgid ""
"In the early days of Qubes OS, for both cases, a block device (backed by a "
"file in dom0 with a vfat filesystem on it) was attached to VM, file(s) "
"copied there, and then the device was detached and attached to target VM. In"
" the DispVM case, if a edited file has been modified, another block device "
"is passed to requester VM in order to update the source file."
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:20
#: 05d8397305fd4ba5b8e2b8d07f19b355
msgid "This has the following disadvantages:"
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:22
#: 4abbd9106f30424b8d3cad4df2198ed3
msgid ""
"performance - dom0 has to prepare and attach/detach block devices, which is "
"slow because of hotplug scripts involvement."
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:24
#: 589a07416e54413ab7ef31b5a97e3baf
msgid ""
"security - VM kernel parses partition table and filesystem metadata from the"
" block device; they are controlled by (potentially untrusted) sender VM."
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:28
#: 238a8b07e70e4048b7fdee2e9f4892ba
msgid ""
"In modern Qubes OS releases, we have reimplemented interVM file copy using "
"qrexec, which addresses the above mentioned disadvantages. Nowadays, even "
"more generic solution (qubes rpc) is used. See the developer docs on qrexec "
"and qubes rpc. In a nutshell, the file sender and the file receiver just "
"read/write from stdin/stdout, and the qubes rpc layer passes data properly -"
" so, no block devices are used."
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:35
#: a6a8a1c0950e426db30ddca1fa3c62be
msgid ""
"The rpc action for regular file copy is *qubes.Filecopy*, the rpc client is "
"named *qfile-agent*, the rpc server is named *qfile-unpacker*. For DispVM "
"copy, the rpc action is *qubes.OpenInVM*, the rpc client is named *qopen-in-"
"vm*, rpc server is named *vm-file-editor*. Note that the qubes.OpenInVM "
"action can be done on a normal AppVM, too."
msgstr ""

#: ../../../_doc/developer/services/qfilecopy.rst:41
#: 1ba170eda39f44139313fb53768ab4a8
msgid ""
"Being a rpc server, *qfile-unpacker* must be coded securely, as it processes"
" potentially untrusted data format. Particularly, we do not want to use "
"external tar or cpio and be prone to all vulnerabilities in them; we want a "
"simplified, small utility, that handles only directory/file/symlink file "
"type, permissions, mtime/atime, and assume user/user ownership. In the "
"current implementation, the code that actually parses the data from srcVM "
"has ca 100 lines of code and executes chrooted to the destination directory."
" The latter is hardcoded to ``~user/QubesIncoming/srcVM``; because of "
"chroot, there is no possibility to alter files outside of this directory."
msgstr ""
