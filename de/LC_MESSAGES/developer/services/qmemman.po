# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# erinm, 2022
# Lars Kl, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-29 01:28+0200\n"
"PO-Revision-Date: 2022-08-29 00:30+0000\n"
"Last-Translator: Lars Kl, 2022\n"
"Language-Team: German (https://www.transifex.com/otf/teams/56717/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../../_doc/developer/services/qmemman.rst:3
#: 020c02bc7bfb4ec4958c30c11a174672
msgid "Qubes memory manager (qmemman)"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:6
#: 8e71bcec2a44403c83e374cefa8da301
msgid "Rationale"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:8
#: 7a70326da6e84a44a8f399f3c7c9c960
msgid ""
"Traditionally, Xen VMs are assigned a fixed amount of memory. It is not the "
"optimal solution, as some VMs may require more memory than assigned "
"initially, while others underutilize memory. Thus, there is a need for "
"solution capable of shifting free memory from VM to another VM."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:13
#: 9f0010c51d9a42b595da5b57cbae6cf2
msgid ""
"The `tmem <https://oss.oracle.com/projects/tmem/>`__ project provides a "
"“pseudo-RAM” that is assigned on per-need basis. However this solution has "
"some disadvantages:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:17
#: 8251bc4356ea456891a62565355b3469
msgid ""
"It does not provide real RAM, just an interface to copy memory to/from fast,"
" RAM-based storage. It is perfect for swap, good for file cache, but not "
"ideal for many tasks."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:20
#: f63c8fc9b7ff49b291dd57ab685d9b22
msgid ""
"It is deeply integrated with the Linux kernel. When Qubes will support "
"Windows guests natively, we would have to port *tmem* to Windows, which may "
"be challenging."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:24
#: 54f57c39e02a4e1c98e2691c8d7af4f3
msgid ""
"Therefore, in Qubes another solution is used. There is the *qmemman* dom0 "
"daemon. All VMs report their memory usage (via xenstore) to *qmemman*, and "
"it makes decisions on whether to balance memory across domains. The actual "
"mechanism to add/remove memory from a domain (*xc.domain_set_target_mem*) is"
" already supported by both PV Linux guests and Windows guests (the latter "
"via PV drivers)."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:31
#: 6eb67bc303834c0bb55518e142ce75b4
msgid ""
"Similarly, when there is need for Xen free memory (for instance, in order to"
" create a new VM), traditionally the memory is obtained from dom0 only. When"
" *qmemman* is running, it offers an interface to obtain memory from all "
"domains."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:36
#: 012bbb8567be40cc9232a1359355fdad
msgid "To sum up, *qmemman* pros and cons. Pros:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:38
#: cb0c7632ec004b818d7c5776d5ef1338
msgid ""
"provides automatic balancing of memory across participating PV and HVM "
"domains, based on their memory demand"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:40
#: 0065ef6244e2438f83c5a29b674e1825
msgid ""
"works well in practice, with less than 1% CPU consumption in the idle case"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:42
#: 5ff52fe6ab0e4d7982ffff4c5cb7ea99
msgid "simple, concise implementation"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:44
#: 51eef9fef84a4c32b4c52f3e63caeae5
msgid "Cons:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:46
#: e03d0efeffbc4b69b20c4f94eedf895e
msgid ""
"the algorithm to calculate the memory requirement for a domain is "
"necessarily simple, and may not closely reflect reality"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:48
#: 575dbeed7fcf4b1e9a19348f00faef55
msgid ""
"*qmemman* is notified by a VM about memory usage change not more often than "
"10 times per second (to limit CPU overhead in VM). Thus, there can be up to "
"0.1s delay until qmemman starts to react to the new memory requirements"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:52
#: 86a4cbc0456f4c70bf58e1a45de8cd9e
msgid ""
"it takes more time to obtain free Xen memory, as all participating domains "
"need to instructed to yield memory"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:56
#: 002139b2a1a34bcc815865127eb50ec3
msgid "Interface"
msgstr "Oberfläche"

#: ../../../_doc/developer/services/qmemman.rst:58
#: fde870ed8bc141d8be9571ac41ca41eb
msgid "*qmemman* listens for the following events:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:60
#: 275e1d2c6ec142e4bb91c076772e2f7d
msgid ""
"writes to ``/local/domain/domid/memory/meminfo`` xenstore keys by *meminfo-"
"writer* process in VM. The content of this key is taken from the VM’s "
"``/proc/meminfo`` pseudofile ; *meminfo-writer* just strips some unused "
"lines from it. Note that *meminfo-writer* writes its xenstore key only if "
"the VM memory usage has changed significantly enough since the last update "
"(by default 30MB), to prevent flooding with almost identical data"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:67
#: 1a990dfbf8b5457fb18c2b12e844800d
msgid ""
"commands issued over Unix socket ``/var/run/qubes/qmemman.sock``. Currently,"
" the only command recognized is to free the specified amount of memory. The "
"QMemmanClient class implements the protocol."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:70
#: 49d0b3949e0047d9add388508a144bb6
msgid ""
"if the ``/var/run/qubes/do-not-membalance`` file exists, *qmemman* suspends "
"memory balancing. It is primarily used when allocating memory for a to-be-"
"created domain, to prevent using up the free Xen memory by the balancing "
"algorithm before the domain creation is completed."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:77
#: ee4967eae1a5403c9058563ca8e7f223
msgid "Algorithms basics"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:79
#: 38b437d025944f14bb5fed245bf1d140
msgid ""
"The core VM property is ``prefmem``. It denotes the amount of memory that "
"should be enough for a domain to run efficiently in the nearest future. All "
"*qmemman* algorithms will never shrink domain memory below ``prefmem``. "
"Currently, ``prefmem`` is simply 130% of current memory usage in a domain "
"(without buffers and cache, but including swap). Naturally, ``prefmem`` is "
"calculated by *qmemman* based on the information passed by *meminfo-writer*."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:87
#: ac6f29f4a797472cb92565a3e780e529
msgid ""
"Whenever *meminfo-writer* running in domain A provides new data on memory "
"usage to *qmemman*, the ``prefmem`` value for A is updated and the following"
" balance algorithm (*qmemman_algo.balance*) is triggered. Its output is the "
"list of (domain_id, new_memory_target_to_be_set) pairs:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:93
#: 86d133d765a54183af38ad726e551400
msgid "TOTAL_PREFMEM = sum of ``prefmem`` of all participating domains"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:94
#: 60c64d389099448497c2e52c76591f66
msgid ""
"TOTAL_MEMORY = sum of all memory assigned to participating domains plus Xen "
"free memory"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:96
#: f8e436e0189b47a886cdb12cbd1c19d9
msgid ""
"if TOTAL_MEMORY > TOTAL_PREFMEM, then redistribute TOTAL_MEMORY across all "
"domains proportionally to their ``prefmem``"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:98
#: db0031ee4c1f40f8a6292e319ff001d9
msgid "if TOTAL_MEMORY < TOTAL_PREFMEM, then"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:100
#: 67c6a0dd5a1a475e820035905066b8e6
msgid ""
"for all domains whose ``prefmem`` is less than actual memory, shrink them to"
" their ``prefmem``"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:102
#: d453ddb7c0ed4225a3ad584f17ad9f01
msgid ""
"redistribute memory reclaimed in the previous step between the rest of "
"domains, proportionally to their ``prefmem``"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:105
#: d037ea3206f94e4a92be0321d551e495
msgid ""
"In order to avoid too frequent memory redistribution, it is actually "
"executed only if one of the below conditions hold:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:108
#: 16233920edbd4298ae3ecc4737421619
msgid ""
"the sum of memory size changes for all domains is more than "
"MIN_TOTAL_MEMORY_TRANSFER (150MB)"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:110
#: 17ac333438bb4c5ca888a0b90a8ec4b3
msgid ""
"one of the domains is below its ``prefmem``, and more than "
"MIN_MEM_CHANGE_WHEN_UNDER_PREF (15MB) would be added to it"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:113
#: d7030b2edf0142aaa6e658166232be2e
msgid ""
"Additionally, the balance algorithm is tuned so that XEN_FREE_MEM_LEFT "
"(50MB) is always left as Xen free memory, to make coherent memory "
"allocations in driver domains work."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:117
#: e42e3e3868c840018c4632bdc30a9be5
msgid ""
"Whenever *qmemman* is asked to return X megabytes of memory to Xen free "
"pool, the following algorithm (*qmemman_algo.balloon*) is executed:"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:120
#: 95ee0b41e26a4270a5404f2291bdf6ef
msgid ""
"find all domains (“donors”) whose actual memory is greater than its "
"``prefmem``"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:122
#: 54516bfe5e24410bb168bed37f0c9ddb
msgid ""
"calculate how much memory can be reclaimed by shrinking donors to their "
"``prefmem``. If it is less than X, return error."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:124
#: c36602d2b297415da40a5ccceef22cb0
msgid ""
"shrink donors, proportionally to their ``prefmem``, so that X MB should "
"become free"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:126
#: 1dec61fd3aef4ee7bd2b09c3519b7047
msgid "wait BALOON_DELAY (0.1s)"
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:127
#: 50fe851fc3714d12ab33155b6461eb5b
msgid ""
"if some domain have not given back any memory, remove it from the donors "
"list, and go to step 2, unless we already did MAX_TRIES (20) iterations "
"(then return error)."
msgstr ""

#: ../../../_doc/developer/services/qmemman.rst:132
#: 17588b8e9ddc4b67b9bf0aecd76c0f68
msgid "Notes"
msgstr "Notizen"

#: ../../../_doc/developer/services/qmemman.rst:134
#: b252f310ee184814a4c29a0475757997
msgid ""
"Conventional means of viewing the memory available to Qubes will give "
"incorrect values for ``dom0`` since commands such as ``free`` will only show"
" the memory allocated for ``dom0``. Run the ``xl info`` command in ``dom0`` "
"and read the ``total_memory`` field to see the total memory available to "
"Qubes."
msgstr ""
